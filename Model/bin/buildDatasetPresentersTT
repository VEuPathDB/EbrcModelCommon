#!/usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";

use File::Temp qw/ tempdir /;

use Data::Dumper;

use Getopt::Long qw(GetOptions);

use EbrcModelCommon::Model::tmUtils;
use CBIL::Util::PropertySet;

use DBI;

#my ($propfile, $instance, $schema, $suffix, $debug);
my ($propfile, $instance, $schema, $suffix, $prefix, $filterValue, $debug, $report);
Getopt::Long::Configure("pass_through");
GetOptions("propfile=s" => \$propfile,
           "instance=s" => \$instance,
           "schema=s" => \$schema,
           "suffix=s" => \$suffix,
           "prefix=s" => \$prefix,
           "filterValue=s" => \$filterValue,
           "debug!" => \$debug,
           "report!" => \$report,
	  );
die "required parameter missing" unless ($propfile && $instance && ($suffix || $report));

my $PROJECT_HOME = $ENV{PROJECT_HOME};

my $dbh = EbrcModelCommon::Model::tmUtils::getDbHandle($instance, $schema, $propfile);

$|=1;


my $sql;
if ($instance =~ /\/eda/ ){
  $sql = <<SQL;
    select 'EDA' as project_id, lower('EDA') as lower_project_id
SQL
} elsif ($PROJECT_HOME =~ /\/eupa/ ){
  $sql = <<SQL;
    SELECT project_id, lower(project_id) as lower_project_id
      FROM (SELECT DISTINCT project_id FROM GenomicSeqAttributes) t1
SQL
} elsif ($PROJECT_HOME =~ /\/uni/ || $PROJECT_HOME =~ /\/rm30362/ ){
  $sql = <<SQL;
    SELECT project_id, lower(project_id) as lower_project_id
      FROM (SELECT DISTINCT project_id from GenomicSeqAttributes) t1
    UNION
    SELECT 'UniDB' AS project_id, 'unidb' as lower_project_id
SQL
} else {
  $sql = <<SQL;
    SELECT project_id, lower(project_id) as lower_project_id
      FROM (
        SELECT DISTINCT pi.name as project_id from Core.ProjectInfo pi, SRes.ExternalDatabase ed
        WHERE ed.row_project_id = pi.project_id
      ) t1
SQL
}
my $projectQuery = $dbh->prepare($sql);

my $TEMPDIR = tempdir( CLEANUP => 1 );


mkdir "$TEMPDIR/dsp";
mkdir "$TEMPDIR/etc";


my $presentersProjectBase;
my $modelProjectBase;

$projectQuery->execute() or die "getting a list of project IDs";
my @presenterFiles;
my $is_eda = 0;  # to determine if this is a EDA database (with Clin and Mbio data)

while (my ($project, $lowerProject) = $projectQuery->fetchrow_array()) {
  my $projectXmlFile = "${project}.xml";
  my $projectXmlPath = "$TEMPDIR/dsp/$projectXmlFile";

  if ($lowerProject =~/eda/) {
    system("cp $PROJECT_HOME/MicrobiomePresenters/Model/lib/xml/datasetPresenters/MicrobiomeDB.xml $projectXmlPath");
    system("cp $PROJECT_HOME/ClinEpiPresenters/Model/lib/xml/datasetPresenters/ClinEpiDB.xml $projectXmlPath");
    system("cp $PROJECT_HOME/ApiCommonPresenters/Model/lib/xml/datasetPresenters/VectorBase.xml $projectXmlPath");
    $modelProjectBase = "MicrobiomeModel";
    $is_eda =1;
  } elsif ($lowerProject =~/microbiome/) {
    $presentersProjectBase = "MicrobiomePresenters";
    $modelProjectBase = "MicrobiomeModel";
    $is_eda++;
    system("cp $PROJECT_HOME/$presentersProjectBase/Model/lib/xml/datasetPresenters/${projectXmlFile} $projectXmlPath");
  } elsif ($lowerProject =~/clinepidb/) {
    $presentersProjectBase = "ClinEpiPresenters";
    $modelProjectBase = "ClinEpiModel";
    $is_eda++;
    system("cp $PROJECT_HOME/$presentersProjectBase/Model/lib/xml/datasetPresenters/${projectXmlFile} $projectXmlPath");
  } else {
    $presentersProjectBase ="ApiCommonPresenters";
    $modelProjectBase ="ApiCommonModel";
    system("cp $PROJECT_HOME/$presentersProjectBase/Model/lib/xml/datasetPresenters/${projectXmlFile} $projectXmlPath");
  }


  unless(-e $projectXmlPath) {
    die "Dataset Presenter file $projectXmlPath could not be found.\n";
  }
}

$projectQuery->finish();


my $globalXmlFile = "global.xml";
my $globalXmlPath = "$TEMPDIR/dsp/$globalXmlFile";

my $dtdFile = "datasetPresenters.dtd";
my $dtdPath = "$TEMPDIR/dsp/$dtdFile";

my $refFile = "datasetReferences.tab";
my $refPath = "$TEMPDIR/etc/$refFile";

my $linksFile = "datasetLinks.xml";
my $linksPath = "$TEMPDIR/etc/$linksFile";

system("cp $PROJECT_HOME/EbrcModelCommon/Model/lib/xml/datasetPresenters/$globalXmlFile $globalXmlPath");


system("cp $PROJECT_HOME/EbrcModelCommon/DatasetPresenter/lib/xml/datasetPresenters/$dtdFile $dtdPath");

system("cp $PROJECT_HOME/$modelProjectBase/Model/config/$refFile $refPath");
system("cp $PROJECT_HOME/$modelProjectBase/Model/config/$linksFile $linksPath");

my $contactsXmlFile = "allContacts.xml";
my $contactsXmlPath = "$TEMPDIR/etc/$contactsXmlFile";

system("cp $PROJECT_HOME/EbrcModelCommon/Model/lib/xml/datasetPresenters/contacts/$contactsXmlFile $contactsXmlPath");

if($report) {
  $suffix = 1234;
}

my $command = "presenterWriteToDb -presentersDir $TEMPDIR/dsp -contactsXmlFile $contactsXmlPath -tuningPropsXmlFile $propfile -instance '$instance' -suffix $suffix -defaultInjectorClassesFile $refPath -defaultHyperLinksFile $linksPath";

if($report) {
  $command = $command . " -report";
}

my $systemResult = system($command);

$dbh->disconnect();

unless($systemResult / 256 == 0) {
  die "Failed Running Program";
}





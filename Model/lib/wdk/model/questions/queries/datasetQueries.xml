<wdkModel>

  <!-- This set of queries is isCacheable=false because during development, and possibly into a release, we might add a dataset -->

  <querySet name="DatasetIds" queryType="id" isCacheable="false">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Source id  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="AllDatasets">
      <paramRef ref="InternalParams.user_id"/>
      <column name="dataset_id"/>
      <sql excludeProjects="MicrobiomeDB,ClinEpiDB">
        <![CDATA[
            SELECT distinct dd.dataset_presenter_id as dataset_id
            FROM apidbtuning.datasetdatasource dd
            WHERE (dd.category is null OR dd.category != 'Link outs')
            AND (dd.project_id = '@PROJECT_ID@' or '@PROJECT_ID@' = 'UniDB')
            EXCEPT
            SELECT dataset_presenter_id as dataset_id
              FROM apidbtuning.datasetproperty
             WHERE property='isPublic' and value='false'
          ]]>
      </sql>

      <sql includeProjects="ClinEpiDB">
        <![CDATA[
            SELECT distinct dd.dataset_presenter_id as dataset_id
            FROM apidbtuning.datasetdatasource dd
            WHERE (dd.category is null OR dd.category != 'Link outs')
             AND  dd.project_id = '@PROJECT_ID@'
              and dd.dataset_presenter_id in (select dataset_presenter_id from apidbtuning.datasetproperty where property='isPublic' and value='true' )
            UNION
            select distinct dd.dataset_presenter_id as dataset_id
            from apidbtuning.datasetdatasource dd
            where (dd.category is null OR dd.category != 'Link outs')
            and  dd.project_id = '@PROJECT_ID@'
            and '@SHOW_UNRELEASED_DATA@' = 'true' and dataset_presenter_id in (select dataset_presenter_id from apidbtuning.datasetproperty where property='isPublic' and value='false' )
          ]]>
      </sql>

      <sql includeProjects="MicrobiomeDB">
        <![CDATA[
            select distinct dd.dataset_presenter_id as dataset_id
            from apidbtuning.datasetdatasource dd
            where (dd.category is null OR dd.category != 'Link outs')
            and dd.project_id = '@PROJECT_ID@'
        ]]>
      </sql>

    </sqlQuery>

    <sqlQuery excludeProjects="ClinEpiDB" name="SitemapDatasets">
      <column name="dataset_id"/>
      <sql>
        <![CDATA[
          SELECT distinct dataset_presenter_id as dataset_id
          FROM apidbTuning.DatasetDatasource
          WHERE (project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery includeProjects="ClinEpiDB" name="SitemapDatasets">
      <column name="dataset_id"/>
      <sql>
        <![CDATA[
          SELECT dpres.dataset_presenter_id as dataset_id
          FROM apidbTuning.DatasetPresenter dpres, apidbtuning.datasetproperty dprop, apidbtuning.datasetdatasource dd
          WHERE dpres.dataset_presenter_id = dprop.dataset_presenter_id
            AND dprop.property = 'isPublic' and dprop.value = 'true'
            AND dd.project_id = '@PROJECT_ID@'
	    and dd.dataset_presenter_id = dpres.dataset_presenter_id
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="MapStudiesForToolbar" includeProjects="EuPathDB,UniDB,VectorBase">
      <column name="dataset_id"/>
        <sql excludeProjects="EuPathDB,UniDB">
        <![CDATA[
            select dpres.dataset_presenter_id as dataset_id
            from apidbTuning.DatasetPresenter dpres, apidbtuning.datasetproperty dprop, apidbtuning.datasetdatasource dd
            where dpres.dataset_presenter_id = dprop.dataset_presenter_id
            and dprop.property = 'isPublic'
            -- and dprop.value = 'true'
            and dd.project_id = '@PROJECT_ID@'
	    and dd.dataset_presenter_id = dpres.dataset_presenter_id
            intersect
            select dpres.dataset_presenter_id as dataset_id
            from apidbTuning.DatasetPresenter dpres, apidbtuning.datasetproperty dprop, apidbtuning.datasetdatasource dd
            where dpres.dataset_presenter_id = dprop.dataset_presenter_id
            and dprop.property = 'templateInjectorClassName'
            and dprop.value = 'GenomicsEDAStudy'
            and dd.project_id = '@PROJECT_ID@'
	    and dd.dataset_presenter_id = dpres.dataset_presenter_id
          ]]>
      </sql>


       <sql includeProjects="EuPathDB,UniDB">
          <![CDATA[
            select dpres.dataset_presenter_id as dataset_id
            from apidbTuning.DatasetPresenter dpres, apidbtuning.datasetproperty dprop
            where dpres.dataset_presenter_id = dprop.dataset_presenter_id
            and dprop.property = 'isPublic'
            -- and dprop.value = 'true'
            --and dpres.project_id = '@PROJECT_ID@'
            intersect
            select dpres.dataset_presenter_id as dataset_id
            from apidbTuning.DatasetPresenter dpres, apidbtuning.datasetproperty dprop
            where dpres.dataset_presenter_id = dprop.dataset_presenter_id
            and dprop.property = 'templateInjectorClassName'
            and dprop.value = 'GenomicsEDAStudy'
            --and dpres.project_id = '@PROJECT_ID@'
            -- we need this condition currently because no geolocation studies show up (the new plasmo dataset)
            and dpres.dataset_presenter_id = 'DS_480c976ef9'
          ]]>
       </sql>
    </sqlQuery>

    <sqlQuery name="ByReferenceName">
      <testParamValues>
        <paramValue name="reference_name">GeneQuestions.GenesByTaxon</paramValue>
        <paramValue name="record_class">TranscriptRecordClasses.TranscriptRecordClass</paramValue>
        <paramValue name="taxon">any</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.reference_name"/>
      <paramRef ref="datasetParams.record_class"/>
      <paramRef ref="datasetParams.taxon"/>
      <column name="dataset_id"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT ref.dataset_presenter_id as dataset_id, ref.target_name, ref.record_type, dnt.TAXON_ID
          FROM apidbtuning.datasourcemodelref ref, apidbtuning.datasetdatasource dd,
	       apidbtuning.datasetpresenter dsp
          WHERE dsp.DATASET_PRESENTER_ID = dd.DATASET_PRESENTER_ID
	    and dd.dataset_datasource_id = ref.dataset_datasource_id
            AND ('any' = '$$taxon$$' or (dd.taxon_id = 0 or dd.taxon_id = $$taxon$$))
            AND ref.target_name = $$reference_name$$
            AND ref.record_type = $$record_class$$
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="ByReferenceNameNoTaxon">
      <testParamValues>
        <paramValue name="reference_name">Reference</paramValue>
        <paramValue name="record_class">PopsetRecordClasses.PopsetRecordClass</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.reference_name"/>
      <paramRef ref="datasetParams.record_class"/>
      <column name="dataset_id"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT ref.dataset_presenter_id as dataset_id,
                 ref.target_name, ref.record_type
          FROM apidbtuning.datasourcemodelref ref, apidbtuning.datasetdatasource dd, apidbtuning.datasetpresenter dsp
          WHERE dsp.dataset_presenter_id = dd.dataset_presenter_id
	    and dd.dataset_datasource_id = ref.dataset_datasource_id
            AND ref.target_name = $$reference_name$$
            AND ref.record_type = $$record_class$$
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="ById">
      <testParamValues>
        <paramValue name="dataset_id">DS_20c45d8ed1</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.dataset_id"/>
      <column name="dataset_id"/>

      <sql>
        <![CDATA[
          SELECT DISTINCT dataset_presenter_id as dataset_id
          FROM APIDBTUNING.datasetpresenter
          WHERE dataset_presenter_id in ($$dataset_id$$)
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="ByExternalDatabaseNames">
      <testParamValues>
        <paramValue name="dataset_name">taxonomy_RSRC</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.dataset_name"/>
      <column name="dataset_id"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT dataset_presenter_id as dataset_id
          FROM APIDBTUNING.datasetdatasource 
          WHERE name IN ($$dataset_name$$)
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="ByQuestionName">
      <testParamValues>
        <paramValue name="question_name">GeneQuestions.GenesByTaxon</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.question_name"/>
      <column name="dataset_id"/>
      <sql>
        <![CDATA[
          SELECT distinct dsp.dataset_presenter_id as dataset_id
          FROM apidbtuning.datasetmodelref ref, apidbtuning.datasetpresenter dsp, apidbtuning.datasetdatasource dd
          WHERE dsp.dataset_presenter_id = ref.dataset_presenter_id
            AND ref.target_name = $$question_name$$
            AND ref.target_type = 'question'
            AND (dd.project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
            AND  COALESCE(dd.category,'') != 'Link outs'
	    and dd.dataset_presenter_id = dsp.dataset_presenter_id
        ]]>
      </sql>
    </sqlQuery>


    <!-- JB:  Weird that profile_graph is included here -->
    <sqlQuery name="ByRecordClass">
      <testParamValues>
        <paramValue name="record_class">TranscriptRecordClasses.TranscriptRecordClass</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.record_class"/>
      <column name="dataset_id"/>

      <sql>
        <![CDATA[
          SELECT DISTINCT dsp.dataset_presenter_id as dataset_id
          FROM apidbtuning.datasetmodelref ref, apidbtuning.datasetpresenter dsp, apidbtuning.datasetdatasource dd
          WHERE dsp.dataset_presenter_id = ref.dataset_presenter_id
            AND ref.record_type = $$record_class$$
            AND ref.target_type IN ('table', 'attribute','profile_graph')
            AND (dd.project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
	    and dd.dataset_presenter_id = dsp.dataset_presenter_id
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="ByCategoryAndOrganism" excludeProjects="MicrobiomeDB,ClinEpiDB">

      <paramRef ref="datasetParams.dataset_category"/>
      <paramRef ref="datasetParams.organism"/>
      <column name="dataset_id"/>

      <sql>
        <![CDATA[
          SELECT DISTINCT dd.dataset_presenter_id as dataset_id
          FROM apidbtuning.datasetdatasource dd, sres.taxonname tn
          WHERE dd.category = $$dataset_category$$
            AND dd.taxon_id = tn.taxon_id
            AND tn.name_class =  'scientific name'
            AND tn.name = $$organism$$
            AND (dd.project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
	  UNION
          SELECT DISTINCT dd.dataset_presenter_id as dataset_id
          FROM apidbtuning.datasetdatasource dd, sres.taxonname tn
          WHERE dd.category = $$dataset_category$$
            AND dd.taxon_id = tn.taxon_id
            AND tn.name_class =  'scientific name'
            AND tn.name = $$organism$$
            AND (dd.project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
	    
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="ByUserId" includeProjects="ClinEpiDB">
      <testParamValues>
        <paramValue name="user_id">48</paramValue>
      </testParamValues>

      <paramRef ref="datasetParams.user_id"/>
      <column name="dataset_id"/>
      <column name="study_id"/>
      <column name="restriction_level"/>
      <column name="approval_status"/>

      <sql>
        <![CDATA[
          SELECT d.dataset_presenter_id as dataset_id, d.dataset_presenter_id as study_id, CASE WHEN u.study_access is null THEN d.study_access ELSE u.study_access END as restriction_level
          FROM (
              select dataset_presenter_id, value as study_access
              from apidbtuning.datasetproperty
              where  property = 'studyAccess'
            ) d
            LEFT JOIN (
              select v.dataset_presenter_id, r.name as study_access
              from studyaccess.end_users@ACCT_DBLINK@ v
                INNER JOIN studyaccess.restriction_level@ACCT_DBLINK@ r ON v.restriction_level_id = r.restriction_level_id
              WHERE user_id = $$user_id$$
                AND (approval_status_id < 1 or approval_status_id is NULL)
            ) u ON d.dataset_presenter_id = u.dataset_presenter_id
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="DatasetsByText" excludeProjects="MicrobiomeDB,ClinEpiDB"                  processName="org.apidb.apicomplexa.wsfplugin.solrsearch.SiteSearchPlugin">
      <paramRef ref="sharedParams.text_expression"/>
      <paramRef ref="sharedParams.document_type" default="dataset"/>
      <paramRef ref="sharedParams.text_fields"/>
      <!-- NOTE: organism param will break in mbio/clinepi/ortho if ever added! -->
      <paramRef ref="organismParams.text_search_organism" selectMode="all"/>
      <!-- the parameter below caches the results for 30 minutes -->
      <paramRef ref="sharedParams.timestamp" interval="1800"/>
      <wsColumn name="dataset_id" width="50"/>
      <wsColumn name="max_score" width="10" columnType="float"/>
      <!-- <wsColumn name="fields_matched" width="500"/> -->
    </processQuery>

    <processQuery name="ByGeneList" excludeProjects="MicrobiomeDB,ClinEpiDB,EuPathDB"                  processName="org.apidb.apicomplexa.wsfplugin.listcomparison.ListComparisonPlugin"                  doNotTest="true">
      <paramRef ref="sharedParams.ds_gene_ids"/>
      <paramRef ref="datasetParams.datasetSelection"/>
      <paramRef ref="datasetParams.enrichmentType"/>
      <!--        <paramRef ref="datasetParams.datasetCutoffType"/> -->
      <!--        <paramRef ref="datasetParams.datasetCutoff"/> -->
      <paramRef ref="datasetParams.threshold"/>
      <paramRef ref="datasetParams.orthologyFlag"/>
      <wsColumn name="dataset_id" width="100" wsName="dataset_id"/>
      <wsColumn name="obser_ovelap" width="100" wsName="obser_ovelap"/>
      <wsColumn name="exp_overlap" width="100" wsName="exp_overlap"/>
      <wsColumn name="fold_enrichment" width="100" wsName="fold_enrichment"/>
      <wsColumn name="percent_ul" width="100" wsName="percent_ul"/>
      <wsColumn name="percent_ds" width="100" wsName="percent_ds"/>
      <wsColumn name="p_value" width="100" wsName="p_value"/>
      <!--<wsColumn name="percent_count" width="50" wsName="percent_count"/>  NOTE: need more general column name -->
      <!--<wsColumn name="hit_count" width="50" wsName="hit_count"/> NOTE: need more general column name -->

    </processQuery>


    <sqlQuery name="AllUserDatasets">
        <paramRef ref="InternalParams.user_id"/>
        <column name="dataset_id"/>
        <sql>
          <![CDATA[
	      select CONCAT('EDAUD_', user_dataset_id) as dataset_id
	      from @VDI_CONTROL_SCHEMA@.AvailableUserDatasets
	      where user_id = $$user_id$$
	      and (project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
          ]]>
       </sql> 
    </sqlQuery>

   <sqlQuery name="AllDatasetsAndUserDatasets">
        <paramRef ref="InternalParams.user_id"/>
        <column name="dataset_id"/>
        <sql excludeProjects="MicrobiomeDB,ClinEpiDB">
          <![CDATA[
            (select dd.dataset_presenter_id as dataset_id
            from apidbtuning.datasetdatasource dd
            where dd.category is null OR dd.category != 'Link outs'
	    and ('@PROJECT_ID' = 'UniDB' or dd.project_id = '@PROJECT_ID@')
            MINUS
            select dataset_presenter_id as dataset_id
              from apidbtuning.datasetproperty 
              where property='isPublic' and value='false')
	   UNION
              select CONCAT('EDAUD_', user_dataset_id) as dataset_id
	      from @VDI_CONTROL_SCHEMA@.AvailableUserDatasets
	      where user_id = $$user_id$$
	      and (project_id = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
          ]]>
       </sql> 

        <sql includeProjects="ClinEpiDB">
          <![CDATA[
            select distinct dd.dataset_presenter_id as dataset_id
            from apidbtuning.datasetdatasource dd
            where (dd.category is null OR dd.category != 'Link outs')
            and dd.project_id = '@PROJECT_ID@'
            and dd.dataset_presenter_id in (select dataset_presenter_id from apidbtuning.datasetproperty where property='isPublic' and value='true' )
            UNION
            select distinct dataset_presenter_id as dataset_id
            from apidbtuning.datasetdatasource dd
            where (dd.category is null OR dd.category != 'Link outs')
            and dd.project_id = '@PROJECT_ID@'
            and '@SHOW_UNRELEASED_DATA@' = 'true'
	    and dd.dataset_presenter_id in (select dataset_presenter_id from apidbtuning.datasetproperty where property='isPublic' and value='false' )
	   UNION
	      select user_dataset_id as dataset_id
	      from @VDI_CONTROL_SCHEMA@.AvailableUserDatasets
	      where user_id = $$user_id$$
	      and project_id = '@PROJECT_ID@'
          ]]>
       </sql>

        <sql includeProjects="MicrobiomeDB">
          <![CDATA[
            select distinct dataset_presenter_id as dataset_id
            from apidbtuning.datasetdatasource dd
            where (dd.category is null OR dd.category != 'Link outs')
            and dd.project_id = '@PROJECT_ID@'
	   UNION
	      select user_dataset_id as dataset_id
	      from @VDI_CONTROL_SCHEMA@.AvailableUserDatasets
	      where user_id = $$user_id$$
	      and project_id = '@PROJECT_ID@'
          ]]>
       </sql>

    </sqlQuery>

</querySet>


  <querySet name="LegacyDatasetIds" queryType="id" isCacheable="false"
            excludeProjects="MicrobiomeDB,ClinEpiDB,EuPathDB">

    <sqlQuery name="AllDatasets">
      <column name="dataset_presenter_id"/>
      <column name="dataset_presenter_name"/>
      <column name="project_name"/>
      <sql>
        <![CDATA[
          SELECT dataset_presenter_id, dataset_presenter_name, project_name
          FROM apidb.legacydataset
          WHERE (project_name = '@PROJECT_ID@' or 'UniDB' = '@PROJECT_ID@')
        ]]>
      </sql>
    </sqlQuery>



  </querySet>


</wdkModel>
